---
# See https://docs.k3s.io/

# define k8s_version to deploy a specific version
# channel: stable, latest, testing
k8s_install_url: https://get.k3s.io
k8s_channel_url: https://update.k3s.io/v1-release/channels

# cluster network (cni)
# flannel-backend: 'vxlan', 'host-gw', 'wireguard-native', 'none'
k8s_flannel_backend: vxlan
k8s_flannel_ipv6_masq: false
k8s_flannel_external_ip: false

# disable builtin services
k8s_disable: 
  - "traefik"

# kubelet configs
#  - "kube-reserved=cpu=500m,memory=1Gi,ephemeral-storage=2Gi"
#  - "system-reserved=cpu=500m,memory=1Gi,ephemeral-storage=2Gi"
#  - "eviction-hard=memory.available<500Mi,nodefs.available<10%"
k8s_kubelet_args:
 - config=/etc/rancher/k3s/kubelet.config

k8s_env:
  INSTALL_K3S_CHANNEL_URL: "{{ k8s_channel_url }}"
  INSTALL_K3S_CHANNEL: "{{ k8s_channel }}"
  INSTALL_K3S_SKIP_START: "{{ k8s_skip_start }}"

  # will attempt to download from channel if not specified
  INSTALL_K3S_VERSION: "{{ k8s_version | d() }}"

  # there is some consider for where the token lives after initial node creation, this could get pruned from env or config most likely
  #K3S_TOKEN: "{{ k8s_cluster_token }}"
  K3S_KUBECONFIG_MODE: "{{ k8s_config_mode }}"

k8s_install_bootstrap: >-
  server

k8s_install_server: >-
  server

k8s_install_agent: >-
  agent
